{"version":3,"sources":["components/Specs/Specs.js","store.js","components/Card/Card.js","components/Header/Header.js","index.js"],"names":["createSpecs","specs","$specs","document","createElement","$table","specName","classList","add","spec","$row","insertRow","insertCell","innerText","appendChild","cartStore","subscribers","counter","$dom","push","action","type","emit","forEach","el","innerHTML","cartCounter","createCard","name","description","price","image","$card","makePrice","toFixed","replace","append","querySelector","addEventListener","dispatch","e","currentTarget","toggle","createHeader","$header","subscribe","$hamburguer","$nav","$search","$searchInput","select","remove","createProductCard","products","randomProduct","product","Math","trunc","random","$root","getElementById","insertAdjacentElement","fetch","then","data","json"],"mappings":"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","file":"src.0303d07d.map","sourceRoot":"../src","sourcesContent":["import \"./Specs.css\";\n\nexport function createSpecs(specs) {\n  let $specs = document.createElement(\"div\");\n  let $table = document.createElement(\"table\");\n  $specs.classList.add(\"specs\");\n\n  for (const specName in specs) {\n    const spec = specs[specName];\n    const $row = $table.insertRow();\n\n    $row.insertCell().innerText = specName;\n    $row.insertCell().innerText = spec;\n  }\n\n  $specs.appendChild($table);\n\n  return $specs;\n}\n","class cartStore {\n  constructor() {\n    this.subscribers = [];\n    this.counter = 0;\n  }\n\n  subscribe($dom) {\n    this.subscribers.push($dom);\n  }\n\n  dispatch(action) {\n    switch (action.type) {\n      case \"INCREMENT\":\n        this.counter++;\n        break;\n      default:\n        this.counter;\n    }\n\n    this.emit();\n  }\n\n  emit() {\n    this.subscribers.forEach(el => (el.innerHTML = this.counter));\n  }\n}\n\nexport const cartCounter = new cartStore();\n","import { createSpecs } from \"./../Specs/Specs\";\nimport { cartCounter } from \"./../../store\";\nimport \"./Card.css\";\n\nexport function createCard({ name, description, price, image, specs }) {\n  const $card = document.createElement(\"div\");\n  const $specs = createSpecs(specs);\n  const makePrice = price => price.toFixed(2).replace(\".\", \",\");\n\n  $card.classList.add(\"card\");\n  $card.innerHTML = `\n    <div class=\"card-wrapper\">\n      <h1 class=\"-title\">${name}</h1>\n      <figure>\n        <img src=\"./img/${image}\" alt=\"${name}\" class=\"-photo\" />\n        <figcaption class=\"-subtitle\">${description}</figcaption>\n      </figure>\n\n      <div class=\"buy-area\">\n        <div class=\"prices\">\n          <div class=\"price\">R$ ${makePrice(price)}</div>\n          <div class=\"installment\">\n            10x de R$ ${makePrice(price / 10)}\n            <div>sem juros</div>\n          </div>\n        </div>\n        <div class=\"heart\">\n          <svg>\n            <path\n              d=\"M 23.125042,2.5433373 C 20.078685,2.5358372 17.302334,4.2893197 16.000079,7.0433138 12.454646,-0.66277813 0.95103804,1.9358713 1.0001571,10.418296 c 0.047775,8.249818 14.9999219,19.1249 14.9999219,19.1249 0,0 14.999921,-10.874943 14.999921,-19.1249 0,-4.3492192 -3.525738,-7.8749585 -7.874958,-7.8749587 z\"\n            />\n          </svg>\n        </div>\n        <div class=\"buy\">\n          <button class=\"buy-button\">Comprar</button>\n        </div>\n      </div>\n    </div>\n  `;\n  $card.append($specs);\n\n  $card.querySelector(\".buy-button\").addEventListener(\"click\", () => {\n    cartCounter.dispatch({ type: \"INCREMENT\" });\n  });\n\n  $card\n    .querySelector(\".heart\")\n    .addEventListener(\"click\", e =>\n      e.currentTarget.classList.toggle(\"--active\")\n    );\n\n  return $card;\n}\n","import { cartCounter } from \"./../../store\";\nimport \"./Header.css\";\n\nexport function createHeader() {\n  const $header = document.createElement(\"header\");\n\n  $header.classList.add(\"header\");\n  $header.innerHTML = `\n    <div class=\"logo\">\n      LOGO\n      <div class=\"hamburguer\">|||</div>\n    </div>\n    <div class=\"search\">\n      <div class=\"-bar\">\n        <input type=\"search\" class=\"-input\">\n      </div>\n    </div>\n    <nav class=\"nav\">\n      <a href=\"#\" class=\"-item\">Produtos</a>\n      <a href=\"#\" class=\"-item\">Servi√ßos</a>\n      <a href=\"#\" class=\"-item\">Carrinho<span class=\"badge\" id=\"cart-counter\">0</span></a>\n    </nav>\n  `;\n\n  cartCounter.subscribe($header.querySelector(\"#cart-counter\"));\n\n  const $hamburguer = $header.querySelector(\".hamburguer\");\n  const $nav = $header.querySelector(\".nav\");\n  const $search = $header.querySelector(\".search\");\n  const $searchInput = $search.querySelector(\".-input\");\n\n  $hamburguer.addEventListener(\"click\", () => {\n    $nav.classList.toggle(\"--active\");\n  });\n\n  $searchInput.addEventListener(\"focus\", () => {\n    $search.classList.add(\"--active\");\n    $searchInput.select();\n  });\n\n  $searchInput.addEventListener(\"blur\", () =>\n    $search.classList.remove(\"--active\")\n  );\n\n  return $header;\n}\n","import { createCard } from \"./components/Card/Card\";\nimport { createHeader } from \"./components/Header/Header\";\nimport \"./css/main.css\";\n\nfetch(\"./mocks/Products.json\")\n  .then(data => data.json())\n  .then(createProductCard);\n\nfunction createProductCard(products) {\n  const randomProduct = Math.trunc(Math.random() * 3);\n  const product = products[randomProduct];\n\n  const $root = document.getElementById(\"root\");\n  const $header = createHeader();\n  const $card = createCard(product);\n\n  $root.innerHTML = \"\";\n  $root.insertAdjacentElement(\"afterbegin\", $header);\n  $root.insertAdjacentElement(\"beforeend\", $card);\n}\n"]}